apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "practice.com.powermockforkii"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        // add multiDexを有効にする
        multiDexEnabled true

        //
        testApplicationId "practice.com.powermockforkii.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    // add
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    // add
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            def kiiProps = loadProperties("kiiAccount.properties")
            println "props.appId = ${kiiProps.appId}"
            println "props.appKey = ${kiiProps.appKey}"

            // BuildConfigクラスへ
            buildConfigField "String", "KII_API_ID", "\"${kiiProps.appId}\""
            buildConfigField "String", "KII_API_KEY", "\"${kiiProps.appKey}\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        //最大ヒープサイズを4Gに設定
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'

    // add kii
    compile 'com.kii:cloud-sdk:2.4.5:library@aar'

    // add other
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:design:24.2.0'
    compile 'com.android.support:support-v13:24.2.0'
    compile 'com.android.support:cardview-v7:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.google.android.gms:play-services:9.4.0'
    compile 'com.mcxiaoke.volley:library:1.0.19'

    // okhttp3
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.okhttp:okhttp-apache:2.3.0'

    // test junit and PowerMock and robolectric
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito2:1.6.5'
    testCompile('org.powermock:powermock-classloading-xstream:1.6.5') {
//        exclude group: 'xmlpull', module: 'xmlpull'
    }

    // test robolectric
    // testCompile 'org.robolectric:robolectric:3.1.2'
    testCompile 'org.robolectric:robolectric:3.0'
//    testCompile 'org.robolectric:shadows-multidex:3.1.2'
    testCompile 'org.robolectric:shadows-multidex:3.0'


}
/**
 * Reads properties from the specified .properties file.
 */
def loadProperties(filename) {
    def props = new Properties()
    file(filename).withInputStream {
        props.load(it)
    }
    return props
}
